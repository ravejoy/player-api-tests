name: Build & Quality Gate

on:
  push:
    branches: [main, "feat/**", "refactor/**"]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

env:
  JAVA_VERSION: "21"
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  ci:
    name: Build & Infra Gate
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Code Style Check
        run: ./gradlew --no-daemon spotlessCheck --stacktrace

      - name: Build
        run: ./gradlew --no-daemon clean build -x test --stacktrace

      - name: "Preflight: check API reachability"
        run: |
          echo "Pinging ${{ vars.API_URL }}/player/get/all ..."
          curl -s -S -D - "${{ vars.API_URL }}/player/get/all" -o /dev/null || exit 1

      - name: "Infra (incl. Health) with HTTP debug"
        run: |
          ./gradlew --no-daemon test \
            "-Dgroups=infra" \
            "-Denv=qa" \
            "-Dapi.url=${{ vars.API_URL }}" \
            "-Dthreads=${{ vars.THREADS }}" \
            "-DLOG_LEVEL=${{ vars.LOG_LEVEL }}" \
            "-Dhttp.mask=true" \
            "-Dhttp.log=true" \
            --stacktrace --info

      - name: Coverage Report
        if: success()
        run: ./gradlew --no-daemon jacocoTestReport --stacktrace

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            build/reports/tests/test/**
            build/test-results/test/**
            build/reports/jacoco/**
          if-no-files-found: warn
          retention-days: 7

      - name: Detect Sonar token
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -n "$SONAR_TOKEN" ]; then
            echo "HAS_SONAR=true" >> "$GITHUB_ENV"
          else
            echo "HAS_SONAR=false" >> "$GITHUB_ENV"
          fi

      - name: SonarCloud Scan
        if: ${{ (github.event_name == 'push' || github.event_name == 'pull_request') && env.HAS_SONAR == 'true' }}
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ vars.SONAR_ORG }}
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=build/classes/java/main
            -Dsonar.junit.reportPaths=build/test-results/test
            -Dsonar.java.coveragePlugin=jacoco
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
